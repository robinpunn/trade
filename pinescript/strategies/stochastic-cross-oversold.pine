// This Pine Script™ code is subject to the terms of the Mozilla Public License 2.0 at https://mozilla.org/MPL/2.0/
// © IVI4yh3IVI

//@version=5
strategy("Stochastic Crossover Strategy with Dynamic Position Sizing", overlay=true, process_orders_on_close=true)

// Risk Management Inputs
riskPercentage = input.float(2, "Risk Percentage (%)", minval=0.1, maxval=100) / 100
atrMultiplier = input.float(1.5, "ATR Multiplier for Stop Loss", minval=0.1)

// Other Inputs
basePeriods = input.int(26, minval=1, title="Base Line Length")
atrPeriod = input.int(14, minval=1, title="ATR Length")
atr = ta.atr(atrPeriod)

// Stochastic Inputs
stochLength = input.int(14, "Stochastic Length")
stochKSmooth = input.int(3, "Stochastic %K Smoothing")
stochDSmooth = input.int(3, "Stochastic %D Smoothing")
oversoldLevel = input.int(20, "Oversold Level")

// Calculate Stochastic
stochK = ta.sma(ta.stoch(close, high, low, stochLength), stochKSmooth)
stochD = ta.sma(stochK, stochDSmooth)

// New Entry condition: Bullish Stochastic crossover in oversold region
longCondition = ta.crossover(stochK, stochD) and stochK < oversoldLevel

// Position Sizing Calculation
stopLossDistance = math.max(atr * atrMultiplier, syminfo.mintick)
riskAmount = strategy.equity * riskPercentage
positionSize = math.floor(math.abs(riskAmount / stopLossDistance))

// Exit conditions
stopLoss = strategy.position_avg_price - stopLossDistance
takeProfit1 = strategy.position_avg_price + atr
trailingStopActivation = strategy.position_avg_price + (2.0 * atr)

// Variables for trailing stop
var float trailingStopLevel = na
var bool trailingStopActive = false

// Entry and exit logic
if barstate.isconfirmed
    // Entry logic
    if (longCondition and strategy.position_size == 0 and positionSize > 0)
        strategy.entry("Long", strategy.long, qty=positionSize)
        trailingStopLevel := na
        trailingStopActive := false
    
    // Exit logic
    if (strategy.position_size > 0)
        // Trailing stop logic
        if (high >= trailingStopActivation)
            trailingStopActive := true
        
        if (trailingStopActive)
            trailingStopLevel := math.max(nz(trailingStopLevel), high - stopLossDistance)
            if (low <= trailingStopLevel)
                strategy.close_all(comment="Trailing Stop")
        else
            // Stop loss
            if (low <= stopLoss)
                strategy.close_all(comment="Stop Loss")
            else
                // Take profit
                strategy.exit("TP1", "Long", qty_percent=50, limit=takeProfit1)
    else
        trailingStopActive := false
        trailingStopLevel := na