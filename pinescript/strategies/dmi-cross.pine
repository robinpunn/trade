//@version=5
strategy("DMI Crossover with Dynamic Position Sizing", overlay=true, process_orders_on_close=true)

// Risk Management Inputs
riskPercentage = input.float(2, "Risk Percentage (%)", minval=0.1, maxval=100) / 100
atrMultiplier = input.float(1.5, "ATR Multiplier for Stop Loss", minval=0.1)

// Other Inputs
basePeriods = input.int(26, minval=1, title="Base Line Length")
atrPeriod = input.int(14, minval=1, title="ATR Length")
atr = ta.atr(atrPeriod)

// DMI
dmi_lensig = input.int(14, title="ADX Smoothing", minval=1, maxval=50)
dmi_len = input.int(14, minval=1, title="DI Length")
dmi_up = ta.change(high)
dmi_down = -ta.change(low)
dmi_plusDM = na(dmi_up) ? na : (dmi_up > dmi_down and dmi_up > 0 ? dmi_up : 0)
dmi_minusDM = na(dmi_down) ? na : (dmi_down > dmi_up and dmi_down > 0 ? dmi_down : 0)
dmi_trur = ta.rma(ta.tr, dmi_len)
dmi_plus = fixnan(100 * ta.rma(dmi_plusDM, dmi_len) / dmi_trur)
dmi_minus = fixnan(100 * ta.rma(dmi_minusDM, dmi_len) / dmi_trur)
dmi_sum = dmi_plus + dmi_minus
dmi_adx = 100 * ta.rma(math.abs(dmi_plus - dmi_minus) / (dmi_sum == 0 ? 1 : dmi_sum), dmi_lensig)

// New Entry condition: Bullish Stochastic crossover in oversold region
longCondition = ta.crossover(dmi_plus, dmi_minus)

// Position Sizing Calculation
stopLossDistance = math.max(atr * atrMultiplier, syminfo.mintick)
riskAmount = strategy.equity * riskPercentage
positionSize = math.floor(math.abs(riskAmount / stopLossDistance))

// Exit conditions
stopLoss = strategy.position_avg_price - stopLossDistance
takeProfit1 = strategy.position_avg_price + atr
trailingStopActivation = strategy.position_avg_price + (2.0 * atr)

// Variables for trailing stop
var float trailingStopLevel = na
var bool trailingStopActive = false

// Entry and exit logic
if barstate.isconfirmed
    // Entry logic
    if (longCondition and strategy.position_size == 0 and positionSize > 0)
        strategy.entry("Long", strategy.long, qty=positionSize)
        trailingStopLevel := na
        trailingStopActive := false
    
    // Exit logic
    if (strategy.position_size > 0)
        // Trailing stop logic
        if (high >= trailingStopActivation)
            trailingStopActive := true
        
        if (trailingStopActive)
            trailingStopLevel := math.max(nz(trailingStopLevel), high - stopLossDistance)
            if (low <= trailingStopLevel)
                strategy.close_all(comment="Trailing Stop")
        else
            // Stop loss
            if (low <= stopLoss)
                strategy.close_all(comment="Stop Loss")
            else
                // Take profit
                strategy.exit("TP1", "Long", qty_percent=50, limit=takeProfit1)
    else
        trailingStopActive := false
        trailingStopLevel 